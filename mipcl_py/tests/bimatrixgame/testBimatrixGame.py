#!/usr/bin/python
from mipcl_py.models.bimatrixgame import BimatrixGame

A = [
  [(3,1), (-2,0), (0,6)],
  [(2,0), ( 0,7), (4,4)],
  [(0,4), ( 6,0), (2,0)]
]

A1 = [
  [(4,1), (-2,0), (0,6)],
  [(0,4), ( 6,2), (2,0)],
  [(2,0), ( 0,6), (5,5)]
]

A2 = [
  [( 0,6), (2,0), (4,4)],
  [(-2,0), (4,-2), (0,6)],
  [( 6,0), (0,4), (2,0)]
]

A3 = [
  [( 6,2), (0,4), (2,0)],
  [(-2,0), (4,1), (0,6)],
  [( 0,6), (2,0), (5,5)]

]

D = [
  [(-1,1), ( 0,-1), (0, 0)],
  [( 0,0), (-1, 1), (1,-1)]
]

C = [
  [(0,3), (2,0), (3,0), (2,-2)],
  [(1,-1), (-3,2), (3,0), (2,0)],
  [(0,2), (1,0), (2,3), (1,1)],
  [(1,-2), (2,-3), (-1,1), (-4,2)],
  [(-3,5), (0,2), (5,-1), (-2,3)],
]

B = [
  [(-1,0), (1,1)],
  [(2,-1), (0,1)],
  [(-2,2), (2,0)]
]

G = [
  [(2,-1), (1,1)],
  [(1, 1), (0,2)],
  [(-1,1), (2,0)]
]

prob = BimatrixGame("BimatrGame")
prob.model(C)
prob.optimize(False, 3600)
prob.printSolution()

